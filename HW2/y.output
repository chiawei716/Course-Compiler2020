Terminals which are not used

   ADD_ASSIGN
   SUB_ASSIGN
   MUL_ASSIGN
   QUO_ASSIGN
   REM_ASSIGN
   IF
   ELSE
   FOR


State 75 conflicts: 13 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: StatementList

    2 StatementList: StatementList Statement
    3              | Statement

    4 Statement: DeclarationStmt NEWLINE
    5          | SimpleStmt NEWLINE
    6          | PrintStmt NEWLINE
    7          | NEWLINE

    8 DeclarationStmt: VAR IDENTIFIER Type

    9 SimpleStmt: ExpressionStmt
   10           | IncDecStmt

   11 PrintStmt: PRINT '(' Expression ')'
   12          | PRINTLN '(' Expression ')'

   13 ExpressionStmt: Expression

   14 IncDecStmt: Expression INC
   15           | Expression DEC

   16 Expression: UnaryExpr
   17           | Expression binary_op Expression

   18 UnaryExpr: PrimaryExpr
   19          | unary_op UnaryExpr

   20 PrimaryExpr: Operand
   21            | IndexExpr
   22            | ConversionExpr

   23 Operand: Literal
   24        | IDENTIFIER
   25        | '(' Expression ')'

   26 IndexExpr: PrimaryExpr '[' Expression ']'

   27 ConversionExpr: Type '(' Expression ')'

   28 Literal: INT_LIT
   29        | FLOAT_LIT
   30        | STRING_LIT
   31        | BOOL_LIT

   32 binary_op: LAND
   33          | LOR
   34          | cmp_op
   35          | add_op
   36          | mul_op

   37 cmp_op: EQL
   38       | NEQ
   39       | GEQ
   40       | LEQ
   41       | '>'
   42       | '<'

   43 add_op: '+'
   44       | '-'

   45 mul_op: '*'
   46       | '/'
   47       | '%'

   48 unary_op: '+'
   49         | '-'
   50         | '!'

   51 Type: TypeName
   52     | ArrayType

   53 TypeName: INT
   54         | FLOAT
   55         | STRING
   56         | BOOL

   57 ArrayType: '[' ']' Type


Terminals, with rules where they appear

$end (0) 0
'!' (33) 50
'%' (37) 47
'(' (40) 11 12 25 27
')' (41) 11 12 25 27
'*' (42) 45
'+' (43) 43 48
'-' (45) 44 49
'/' (47) 46
'<' (60) 42
'>' (62) 41
'[' (91) 26 57
']' (93) 26 57
error (256)
VAR (258) 8
INT (259) 53
FLOAT (260) 54
BOOL (261) 56
STRING (262) 55
INC (263) 14
DEC (264) 15
GEQ (265) 39
LEQ (266) 40
EQL (267) 37
NEQ (268) 38
ADD_ASSIGN (269)
SUB_ASSIGN (270)
MUL_ASSIGN (271)
QUO_ASSIGN (272)
REM_ASSIGN (273)
LAND (274) 32
LOR (275) 33
NEWLINE (276) 4 5 6 7
PRINT (277) 11
PRINTLN (278) 12
IF (279)
ELSE (280)
FOR (281)
INT_LIT (282) 28
FLOAT_LIT (283) 29
STRING_LIT (284) 30
IDENTIFIER (285) 8 24
BOOL_LIT (286) 31


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
Program (45)
    on left: 1, on right: 0
StatementList (46)
    on left: 2 3, on right: 1 2
Statement (47)
    on left: 4 5 6 7, on right: 2 3
DeclarationStmt (48)
    on left: 8, on right: 4
SimpleStmt (49)
    on left: 9 10, on right: 5
PrintStmt (50)
    on left: 11 12, on right: 6
ExpressionStmt (51)
    on left: 13, on right: 9
IncDecStmt (52)
    on left: 14 15, on right: 10
Expression (53)
    on left: 16 17, on right: 11 12 13 14 15 17 25 26 27
UnaryExpr (54)
    on left: 18 19, on right: 16 19
PrimaryExpr (55)
    on left: 20 21 22, on right: 18 26
Operand (56)
    on left: 23 24 25, on right: 20
IndexExpr (57)
    on left: 26, on right: 21
ConversionExpr (58)
    on left: 27, on right: 22
Literal (59)
    on left: 28 29 30 31, on right: 23
binary_op (60)
    on left: 32 33 34 35 36, on right: 17
cmp_op (61)
    on left: 37 38 39 40 41 42, on right: 34
add_op (62)
    on left: 43 44, on right: 35
mul_op (63)
    on left: 45 46 47, on right: 36
unary_op (64)
    on left: 48 49 50, on right: 19
Type (65)
    on left: 51 52, on right: 8 27 57
TypeName (66)
    on left: 53 54 55 56, on right: 51
ArrayType (67)
    on left: 57, on right: 52


state 0

    0 $accept: . Program $end

    VAR         shift, and go to state 1
    INT         shift, and go to state 2
    FLOAT       shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    NEWLINE     shift, and go to state 6
    PRINT       shift, and go to state 7
    PRINTLN     shift, and go to state 8
    INT_LIT     shift, and go to state 9
    FLOAT_LIT   shift, and go to state 10
    STRING_LIT  shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    BOOL_LIT    shift, and go to state 13
    '('         shift, and go to state 14
    '['         shift, and go to state 15
    '+'         shift, and go to state 16
    '-'         shift, and go to state 17
    '!'         shift, and go to state 18

    Program          go to state 19
    StatementList    go to state 20
    Statement        go to state 21
    DeclarationStmt  go to state 22
    SimpleStmt       go to state 23
    PrintStmt        go to state 24
    ExpressionStmt   go to state 25
    IncDecStmt       go to state 26
    Expression       go to state 27
    UnaryExpr        go to state 28
    PrimaryExpr      go to state 29
    Operand          go to state 30
    IndexExpr        go to state 31
    ConversionExpr   go to state 32
    Literal          go to state 33
    unary_op         go to state 34
    Type             go to state 35
    TypeName         go to state 36
    ArrayType        go to state 37


state 1

    8 DeclarationStmt: VAR . IDENTIFIER Type

    IDENTIFIER  shift, and go to state 38


state 2

   53 TypeName: INT .

    $default  reduce using rule 53 (TypeName)


state 3

   54 TypeName: FLOAT .

    $default  reduce using rule 54 (TypeName)


state 4

   56 TypeName: BOOL .

    $default  reduce using rule 56 (TypeName)


state 5

   55 TypeName: STRING .

    $default  reduce using rule 55 (TypeName)


state 6

    7 Statement: NEWLINE .

    $default  reduce using rule 7 (Statement)


state 7

   11 PrintStmt: PRINT . '(' Expression ')'

    '('  shift, and go to state 39


state 8

   12 PrintStmt: PRINTLN . '(' Expression ')'

    '('  shift, and go to state 40


state 9

   28 Literal: INT_LIT .

    $default  reduce using rule 28 (Literal)


state 10

   29 Literal: FLOAT_LIT .

    $default  reduce using rule 29 (Literal)


state 11

   30 Literal: STRING_LIT .

    $default  reduce using rule 30 (Literal)


state 12

   24 Operand: IDENTIFIER .

    $default  reduce using rule 24 (Operand)


state 13

   31 Literal: BOOL_LIT .

    $default  reduce using rule 31 (Literal)


state 14

   25 Operand: '(' . Expression ')'

    INT         shift, and go to state 2
    FLOAT       shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_LIT     shift, and go to state 9
    FLOAT_LIT   shift, and go to state 10
    STRING_LIT  shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    BOOL_LIT    shift, and go to state 13
    '('         shift, and go to state 14
    '['         shift, and go to state 15
    '+'         shift, and go to state 16
    '-'         shift, and go to state 17
    '!'         shift, and go to state 18

    Expression      go to state 41
    UnaryExpr       go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    IndexExpr       go to state 31
    ConversionExpr  go to state 32
    Literal         go to state 33
    unary_op        go to state 34
    Type            go to state 35
    TypeName        go to state 36
    ArrayType       go to state 37


state 15

   57 ArrayType: '[' . ']' Type

    ']'  shift, and go to state 42


state 16

   48 unary_op: '+' .

    $default  reduce using rule 48 (unary_op)


state 17

   49 unary_op: '-' .

    $default  reduce using rule 49 (unary_op)


state 18

   50 unary_op: '!' .

    $default  reduce using rule 50 (unary_op)


state 19

    0 $accept: Program . $end

    $end  shift, and go to state 43


state 20

    1 Program: StatementList .
    2 StatementList: StatementList . Statement

    VAR         shift, and go to state 1
    INT         shift, and go to state 2
    FLOAT       shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    NEWLINE     shift, and go to state 6
    PRINT       shift, and go to state 7
    PRINTLN     shift, and go to state 8
    INT_LIT     shift, and go to state 9
    FLOAT_LIT   shift, and go to state 10
    STRING_LIT  shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    BOOL_LIT    shift, and go to state 13
    '('         shift, and go to state 14
    '['         shift, and go to state 15
    '+'         shift, and go to state 16
    '-'         shift, and go to state 17
    '!'         shift, and go to state 18

    $default  reduce using rule 1 (Program)

    Statement        go to state 44
    DeclarationStmt  go to state 22
    SimpleStmt       go to state 23
    PrintStmt        go to state 24
    ExpressionStmt   go to state 25
    IncDecStmt       go to state 26
    Expression       go to state 27
    UnaryExpr        go to state 28
    PrimaryExpr      go to state 29
    Operand          go to state 30
    IndexExpr        go to state 31
    ConversionExpr   go to state 32
    Literal          go to state 33
    unary_op         go to state 34
    Type             go to state 35
    TypeName         go to state 36
    ArrayType        go to state 37


state 21

    3 StatementList: Statement .

    $default  reduce using rule 3 (StatementList)


state 22

    4 Statement: DeclarationStmt . NEWLINE

    NEWLINE  shift, and go to state 45


state 23

    5 Statement: SimpleStmt . NEWLINE

    NEWLINE  shift, and go to state 46


state 24

    6 Statement: PrintStmt . NEWLINE

    NEWLINE  shift, and go to state 47


state 25

    9 SimpleStmt: ExpressionStmt .

    $default  reduce using rule 9 (SimpleStmt)


state 26

   10 SimpleStmt: IncDecStmt .

    $default  reduce using rule 10 (SimpleStmt)


state 27

   13 ExpressionStmt: Expression .
   14 IncDecStmt: Expression . INC
   15           | Expression . DEC
   17 Expression: Expression . binary_op Expression

    INC   shift, and go to state 48
    DEC   shift, and go to state 49
    GEQ   shift, and go to state 50
    LEQ   shift, and go to state 51
    EQL   shift, and go to state 52
    NEQ   shift, and go to state 53
    LAND  shift, and go to state 54
    LOR   shift, and go to state 55
    '>'   shift, and go to state 56
    '<'   shift, and go to state 57
    '+'   shift, and go to state 58
    '-'   shift, and go to state 59
    '*'   shift, and go to state 60
    '/'   shift, and go to state 61
    '%'   shift, and go to state 62

    $default  reduce using rule 13 (ExpressionStmt)

    binary_op  go to state 63
    cmp_op     go to state 64
    add_op     go to state 65
    mul_op     go to state 66


state 28

   16 Expression: UnaryExpr .

    $default  reduce using rule 16 (Expression)


state 29

   18 UnaryExpr: PrimaryExpr .
   26 IndexExpr: PrimaryExpr . '[' Expression ']'

    '['  shift, and go to state 67

    $default  reduce using rule 18 (UnaryExpr)


state 30

   20 PrimaryExpr: Operand .

    $default  reduce using rule 20 (PrimaryExpr)


state 31

   21 PrimaryExpr: IndexExpr .

    $default  reduce using rule 21 (PrimaryExpr)


state 32

   22 PrimaryExpr: ConversionExpr .

    $default  reduce using rule 22 (PrimaryExpr)


state 33

   23 Operand: Literal .

    $default  reduce using rule 23 (Operand)


state 34

   19 UnaryExpr: unary_op . UnaryExpr

    INT         shift, and go to state 2
    FLOAT       shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_LIT     shift, and go to state 9
    FLOAT_LIT   shift, and go to state 10
    STRING_LIT  shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    BOOL_LIT    shift, and go to state 13
    '('         shift, and go to state 14
    '['         shift, and go to state 15
    '+'         shift, and go to state 16
    '-'         shift, and go to state 17
    '!'         shift, and go to state 18

    UnaryExpr       go to state 68
    PrimaryExpr     go to state 29
    Operand         go to state 30
    IndexExpr       go to state 31
    ConversionExpr  go to state 32
    Literal         go to state 33
    unary_op        go to state 34
    Type            go to state 35
    TypeName        go to state 36
    ArrayType       go to state 37


state 35

   27 ConversionExpr: Type . '(' Expression ')'

    '('  shift, and go to state 69


state 36

   51 Type: TypeName .

    $default  reduce using rule 51 (Type)


state 37

   52 Type: ArrayType .

    $default  reduce using rule 52 (Type)


state 38

    8 DeclarationStmt: VAR IDENTIFIER . Type

    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    '['     shift, and go to state 15

    Type       go to state 70
    TypeName   go to state 36
    ArrayType  go to state 37


state 39

   11 PrintStmt: PRINT '(' . Expression ')'

    INT         shift, and go to state 2
    FLOAT       shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_LIT     shift, and go to state 9
    FLOAT_LIT   shift, and go to state 10
    STRING_LIT  shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    BOOL_LIT    shift, and go to state 13
    '('         shift, and go to state 14
    '['         shift, and go to state 15
    '+'         shift, and go to state 16
    '-'         shift, and go to state 17
    '!'         shift, and go to state 18

    Expression      go to state 71
    UnaryExpr       go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    IndexExpr       go to state 31
    ConversionExpr  go to state 32
    Literal         go to state 33
    unary_op        go to state 34
    Type            go to state 35
    TypeName        go to state 36
    ArrayType       go to state 37


state 40

   12 PrintStmt: PRINTLN '(' . Expression ')'

    INT         shift, and go to state 2
    FLOAT       shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_LIT     shift, and go to state 9
    FLOAT_LIT   shift, and go to state 10
    STRING_LIT  shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    BOOL_LIT    shift, and go to state 13
    '('         shift, and go to state 14
    '['         shift, and go to state 15
    '+'         shift, and go to state 16
    '-'         shift, and go to state 17
    '!'         shift, and go to state 18

    Expression      go to state 72
    UnaryExpr       go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    IndexExpr       go to state 31
    ConversionExpr  go to state 32
    Literal         go to state 33
    unary_op        go to state 34
    Type            go to state 35
    TypeName        go to state 36
    ArrayType       go to state 37


state 41

   17 Expression: Expression . binary_op Expression
   25 Operand: '(' Expression . ')'

    GEQ   shift, and go to state 50
    LEQ   shift, and go to state 51
    EQL   shift, and go to state 52
    NEQ   shift, and go to state 53
    LAND  shift, and go to state 54
    LOR   shift, and go to state 55
    ')'   shift, and go to state 73
    '>'   shift, and go to state 56
    '<'   shift, and go to state 57
    '+'   shift, and go to state 58
    '-'   shift, and go to state 59
    '*'   shift, and go to state 60
    '/'   shift, and go to state 61
    '%'   shift, and go to state 62

    binary_op  go to state 63
    cmp_op     go to state 64
    add_op     go to state 65
    mul_op     go to state 66


state 42

   57 ArrayType: '[' ']' . Type

    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    BOOL    shift, and go to state 4
    STRING  shift, and go to state 5
    '['     shift, and go to state 15

    Type       go to state 74
    TypeName   go to state 36
    ArrayType  go to state 37


state 43

    0 $accept: Program $end .

    $default  accept


state 44

    2 StatementList: StatementList Statement .

    $default  reduce using rule 2 (StatementList)


state 45

    4 Statement: DeclarationStmt NEWLINE .

    $default  reduce using rule 4 (Statement)


state 46

    5 Statement: SimpleStmt NEWLINE .

    $default  reduce using rule 5 (Statement)


state 47

    6 Statement: PrintStmt NEWLINE .

    $default  reduce using rule 6 (Statement)


state 48

   14 IncDecStmt: Expression INC .

    $default  reduce using rule 14 (IncDecStmt)


state 49

   15 IncDecStmt: Expression DEC .

    $default  reduce using rule 15 (IncDecStmt)


state 50

   39 cmp_op: GEQ .

    $default  reduce using rule 39 (cmp_op)


state 51

   40 cmp_op: LEQ .

    $default  reduce using rule 40 (cmp_op)


state 52

   37 cmp_op: EQL .

    $default  reduce using rule 37 (cmp_op)


state 53

   38 cmp_op: NEQ .

    $default  reduce using rule 38 (cmp_op)


state 54

   32 binary_op: LAND .

    $default  reduce using rule 32 (binary_op)


state 55

   33 binary_op: LOR .

    $default  reduce using rule 33 (binary_op)


state 56

   41 cmp_op: '>' .

    $default  reduce using rule 41 (cmp_op)


state 57

   42 cmp_op: '<' .

    $default  reduce using rule 42 (cmp_op)


state 58

   43 add_op: '+' .

    $default  reduce using rule 43 (add_op)


state 59

   44 add_op: '-' .

    $default  reduce using rule 44 (add_op)


state 60

   45 mul_op: '*' .

    $default  reduce using rule 45 (mul_op)


state 61

   46 mul_op: '/' .

    $default  reduce using rule 46 (mul_op)


state 62

   47 mul_op: '%' .

    $default  reduce using rule 47 (mul_op)


state 63

   17 Expression: Expression binary_op . Expression

    INT         shift, and go to state 2
    FLOAT       shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_LIT     shift, and go to state 9
    FLOAT_LIT   shift, and go to state 10
    STRING_LIT  shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    BOOL_LIT    shift, and go to state 13
    '('         shift, and go to state 14
    '['         shift, and go to state 15
    '+'         shift, and go to state 16
    '-'         shift, and go to state 17
    '!'         shift, and go to state 18

    Expression      go to state 75
    UnaryExpr       go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    IndexExpr       go to state 31
    ConversionExpr  go to state 32
    Literal         go to state 33
    unary_op        go to state 34
    Type            go to state 35
    TypeName        go to state 36
    ArrayType       go to state 37


state 64

   34 binary_op: cmp_op .

    $default  reduce using rule 34 (binary_op)


state 65

   35 binary_op: add_op .

    $default  reduce using rule 35 (binary_op)


state 66

   36 binary_op: mul_op .

    $default  reduce using rule 36 (binary_op)


state 67

   26 IndexExpr: PrimaryExpr '[' . Expression ']'

    INT         shift, and go to state 2
    FLOAT       shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_LIT     shift, and go to state 9
    FLOAT_LIT   shift, and go to state 10
    STRING_LIT  shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    BOOL_LIT    shift, and go to state 13
    '('         shift, and go to state 14
    '['         shift, and go to state 15
    '+'         shift, and go to state 16
    '-'         shift, and go to state 17
    '!'         shift, and go to state 18

    Expression      go to state 76
    UnaryExpr       go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    IndexExpr       go to state 31
    ConversionExpr  go to state 32
    Literal         go to state 33
    unary_op        go to state 34
    Type            go to state 35
    TypeName        go to state 36
    ArrayType       go to state 37


state 68

   19 UnaryExpr: unary_op UnaryExpr .

    $default  reduce using rule 19 (UnaryExpr)


state 69

   27 ConversionExpr: Type '(' . Expression ')'

    INT         shift, and go to state 2
    FLOAT       shift, and go to state 3
    BOOL        shift, and go to state 4
    STRING      shift, and go to state 5
    INT_LIT     shift, and go to state 9
    FLOAT_LIT   shift, and go to state 10
    STRING_LIT  shift, and go to state 11
    IDENTIFIER  shift, and go to state 12
    BOOL_LIT    shift, and go to state 13
    '('         shift, and go to state 14
    '['         shift, and go to state 15
    '+'         shift, and go to state 16
    '-'         shift, and go to state 17
    '!'         shift, and go to state 18

    Expression      go to state 77
    UnaryExpr       go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    IndexExpr       go to state 31
    ConversionExpr  go to state 32
    Literal         go to state 33
    unary_op        go to state 34
    Type            go to state 35
    TypeName        go to state 36
    ArrayType       go to state 37


state 70

    8 DeclarationStmt: VAR IDENTIFIER Type .

    $default  reduce using rule 8 (DeclarationStmt)


state 71

   11 PrintStmt: PRINT '(' Expression . ')'
   17 Expression: Expression . binary_op Expression

    GEQ   shift, and go to state 50
    LEQ   shift, and go to state 51
    EQL   shift, and go to state 52
    NEQ   shift, and go to state 53
    LAND  shift, and go to state 54
    LOR   shift, and go to state 55
    ')'   shift, and go to state 78
    '>'   shift, and go to state 56
    '<'   shift, and go to state 57
    '+'   shift, and go to state 58
    '-'   shift, and go to state 59
    '*'   shift, and go to state 60
    '/'   shift, and go to state 61
    '%'   shift, and go to state 62

    binary_op  go to state 63
    cmp_op     go to state 64
    add_op     go to state 65
    mul_op     go to state 66


state 72

   12 PrintStmt: PRINTLN '(' Expression . ')'
   17 Expression: Expression . binary_op Expression

    GEQ   shift, and go to state 50
    LEQ   shift, and go to state 51
    EQL   shift, and go to state 52
    NEQ   shift, and go to state 53
    LAND  shift, and go to state 54
    LOR   shift, and go to state 55
    ')'   shift, and go to state 79
    '>'   shift, and go to state 56
    '<'   shift, and go to state 57
    '+'   shift, and go to state 58
    '-'   shift, and go to state 59
    '*'   shift, and go to state 60
    '/'   shift, and go to state 61
    '%'   shift, and go to state 62

    binary_op  go to state 63
    cmp_op     go to state 64
    add_op     go to state 65
    mul_op     go to state 66


state 73

   25 Operand: '(' Expression ')' .

    $default  reduce using rule 25 (Operand)


state 74

   57 ArrayType: '[' ']' Type .

    $default  reduce using rule 57 (ArrayType)


state 75

   17 Expression: Expression . binary_op Expression
   17           | Expression binary_op Expression .

    GEQ   shift, and go to state 50
    LEQ   shift, and go to state 51
    EQL   shift, and go to state 52
    NEQ   shift, and go to state 53
    LAND  shift, and go to state 54
    LOR   shift, and go to state 55
    '>'   shift, and go to state 56
    '<'   shift, and go to state 57
    '+'   shift, and go to state 58
    '-'   shift, and go to state 59
    '*'   shift, and go to state 60
    '/'   shift, and go to state 61
    '%'   shift, and go to state 62

    GEQ       [reduce using rule 17 (Expression)]
    LEQ       [reduce using rule 17 (Expression)]
    EQL       [reduce using rule 17 (Expression)]
    NEQ       [reduce using rule 17 (Expression)]
    LAND      [reduce using rule 17 (Expression)]
    LOR       [reduce using rule 17 (Expression)]
    '>'       [reduce using rule 17 (Expression)]
    '<'       [reduce using rule 17 (Expression)]
    '+'       [reduce using rule 17 (Expression)]
    '-'       [reduce using rule 17 (Expression)]
    '*'       [reduce using rule 17 (Expression)]
    '/'       [reduce using rule 17 (Expression)]
    '%'       [reduce using rule 17 (Expression)]
    $default  reduce using rule 17 (Expression)

    binary_op  go to state 63
    cmp_op     go to state 64
    add_op     go to state 65
    mul_op     go to state 66


state 76

   17 Expression: Expression . binary_op Expression
   26 IndexExpr: PrimaryExpr '[' Expression . ']'

    GEQ   shift, and go to state 50
    LEQ   shift, and go to state 51
    EQL   shift, and go to state 52
    NEQ   shift, and go to state 53
    LAND  shift, and go to state 54
    LOR   shift, and go to state 55
    ']'   shift, and go to state 80
    '>'   shift, and go to state 56
    '<'   shift, and go to state 57
    '+'   shift, and go to state 58
    '-'   shift, and go to state 59
    '*'   shift, and go to state 60
    '/'   shift, and go to state 61
    '%'   shift, and go to state 62

    binary_op  go to state 63
    cmp_op     go to state 64
    add_op     go to state 65
    mul_op     go to state 66


state 77

   17 Expression: Expression . binary_op Expression
   27 ConversionExpr: Type '(' Expression . ')'

    GEQ   shift, and go to state 50
    LEQ   shift, and go to state 51
    EQL   shift, and go to state 52
    NEQ   shift, and go to state 53
    LAND  shift, and go to state 54
    LOR   shift, and go to state 55
    ')'   shift, and go to state 81
    '>'   shift, and go to state 56
    '<'   shift, and go to state 57
    '+'   shift, and go to state 58
    '-'   shift, and go to state 59
    '*'   shift, and go to state 60
    '/'   shift, and go to state 61
    '%'   shift, and go to state 62

    binary_op  go to state 63
    cmp_op     go to state 64
    add_op     go to state 65
    mul_op     go to state 66


state 78

   11 PrintStmt: PRINT '(' Expression ')' .

    $default  reduce using rule 11 (PrintStmt)


state 79

   12 PrintStmt: PRINTLN '(' Expression ')' .

    $default  reduce using rule 12 (PrintStmt)


state 80

   26 IndexExpr: PrimaryExpr '[' Expression ']' .

    $default  reduce using rule 26 (IndexExpr)


state 81

   27 ConversionExpr: Type '(' Expression ')' .

    $default  reduce using rule 27 (ConversionExpr)
